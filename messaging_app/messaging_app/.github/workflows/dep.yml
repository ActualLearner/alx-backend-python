# Name for the workflow, which will be displayed in the GitHub Actions tab
name: Docker Build and Push

# This workflow triggers on every push to the 'main' branch
on:
  push:
    branches: [ "main" ]

# A workflow is made of one or more jobs
jobs:
  # Defines a job with the ID 'build-and-push'
  build-and-push:
    # The type of machine to run the job on
    runs-on: ubuntu-latest
    # Grant permissions for the job to read the repository contents
    permissions:
      contents: read

    # A sequence of tasks to be executed for the job
    steps:
      # Step 1: Checks out your repository's code
      - name: Check out the repo
        uses: actions/checkout@v4

      # Step 2: Log in to Docker Hub
      # This action uses the secrets you stored in GitHub settings
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # Step 3: Extract metadata (tags and labels) for Docker
      # This action automatically creates useful tags for your image,
      # such as a tag for the git commit SHA and the tag 'latest'.
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ secrets.DOCKERHUB_USERNAME }}/messaging-app

      # Step 4: Build the Docker image and push it to Docker Hub
      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          # The build context is the 'messaging_app' directory where your Dockerfile is
          context: ./messaging_app
          # Push the image to the registry after building
          push: true
          # Use the tags generated by the metadata step (e.g., 'latest' and the git SHA)
          tags: ${{ steps.meta.outputs.tags }}
          # Use the labels generated by the metadata step
          labels: ${{ steps.meta.outputs.labels }}
