pipeline {
    agent any

    environment {
        GIT_CREDENTIALS       = 'your-credentials-id'
        GIT_BRANCH            = 'main'
        DOCKER_CREDENTIALS_ID = 'dockerhub-credentials'
        DOCKERHUB_USERNAME    = 'your-dockerhub-username'
        IMAGE_NAME            = 'messaging-app'
    }

    stages {
        stage('Checkout') {
            steps {
                git branch: "${GIT_BRANCH}",
                    credentialsId: "${GIT_CREDENTIALS}",
                    url: 'https://github.com/your-username/alx-backend-python.git'
            }
        }

        stage('Install Dependencies') {
            steps {
                sh 'python3 -m venv venv'
                sh '. venv/bin/activate && pip3 install --upgrade pip'
                sh '. venv/bin/activate && pip3 install -r messaging_app/requirements.txt'
            }
        }

        stage('Run Tests') {
            steps {
                sh '. venv/bin/activate && pytest messaging_app/ --junitxml=reports/test-results.xml'
            }
            post {
                always {
                    junit 'reports/test-results.xml'
                }
            }
        }

        stage('Build Docker Image') {
            steps {
                script {
                    docker.build("${DOCKERHUB_USERNAME}/${IMAGE_NAME}:${BUILD_NUMBER}", './messaging_app')
                }
            }
        }

        stage('Push Docker Image') {
            steps {
                script {
                    docker.withRegistry('https://registry.hub.docker.com', DOCKER_CREDENTIALS_ID) {
                        docker.image("${DOCKERHUB_USERNAME}/${IMAGE_NAME}:${BUILD_NUMBER}").push()
                        docker.image("${DOCKERHUB_USERNAME}/${IMAGE_NAME}:${BUILD_NUMBER}").push("latest")
                    }
                }
            }
        }
    }
}
